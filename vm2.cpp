// МН - Метод Ньютона
#include <iostream>
#include <cmath>

using namespace std;

// Функция, заданное уравнение
double f(double x) {
    return 2*sin(x) - x + 0.4;
}

// Функция, производная от заданного уравнения
double df(double x) {
    return 2*cos(x) - 1;
}

int main() {
    double x0 = -2.5;  // Начальное приближение
    double x;
    double eps = 0.001;  // Задаем точность вычислений
    double beta = 0.01;  // Задаем параметр метода Ньютона

    do {
        x = x0 - beta*f(x0)/df(x0);  // Формула метода Ньютона с параметром beta
        x0 = x;
    } while (abs(f(x)) > eps);

    // После выполнения итераций x будет содержать приближенное значение корня уравнения
    cout << "Корень уравнения 2sin(x) - x + 0.4 = 0 на отрезке [-2.5, -1.5] равен: " << x << endl;

    // Проверяем, что найденное значение является корнем уравнения
    if (abs(f(x)) < eps) {
        cout << "Найденное значение является корнем уравнения." << endl;
    } else {
        cout << "Найденное значение не является корнем уравнения." << endl;
    }

    return 0;
}
